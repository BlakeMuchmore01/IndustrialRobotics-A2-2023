%% 2F-85 Robotiq Gripper for Aubo i5
% https://robotiq.com/products/2f85-140-adaptive-robot-gripper

classdef TwoFingeredGripper < RobotBaseClass
    %% Gripper Class Properties
    % Non-constant Properties
    properties (Access = public)
        isClosed = false; % Variable determining if gripper finger is currently in open/closed state
        plyFileNameStem = 'TwoFingeredGripper'; % Name stem used to find associated ply files when plotting
    end

    % Constant Properties
    properties (Access = public, Constant)
        initialJointAngles = [0 45 45]*pi/180; % Default starting pose for Gripper Finger
        movementSteps = 50; % Default number of steps for movement
    end

    %% ...structors
    methods
        %% Constructor for 2F-85
        function self = TwoFingeredGripper(baseTr,fingerNum,L)
            % Setting the default base transform if not set within
            % constructor inputs
            if nargin < 3
                % Creating log file if not supplied (indicates it hasn't
                % been created yet)
                L = log4matlab('logFile.log');
                L.SetCommandWindowLevel(L.DEBUG);

                if nargin < 2
                    % Logging that the default base transform has been used
                    L.mlog = {L.DEBUG,'TwoFingeredGripper','Base transform not set. Default base transform used'};
                    baseTr = eye(4); % Setting base transform as default
                end

                if nargin < 1
                    % Logging that the default finger number has been used
                    L.mlog = {L.DEBUG,'TwoFingeredGripper','Finger number not set. Default finger number used'};
                    fingerNum = 1; % Setting default finger number
                end
            end

            self.CreateModel(fingerNum); % Creating the 2F-85 D&H parameter model

            % Orientating the 2F-85 within the workspace
            self.model.base = self.model.base.T * baseTr;
            self.homeQ = self.initialJointAngles; % Setting initial pose of Aubo i5

            % Rotating the second finger generated by 180 deg
            if fingerNum == 2
                self.model.base = self.model.base.T * trotz(pi);
            end

            % Plotting the 2F-140 and associated ply models
            self.PlotAndColourRobot();

            % Logging the creation of the gripper finger
            L.mlog = {L.DEBUG,'TwoFingeredGripper',['Gripper Finger ',num2str(fingerNum),' created within the workspace']};
            
            % Logging creation of 2F-85 gripper
            if fingerNum == 2
                L.mlog = {L.DEBUG,'TwoFingeredGripper','2F-85 gripper object created within the workspace'};
            end
        end

        %% D&H Parameter Serial Link Creation
        function CreateModel(self, fingerNum)
            % D&H parameters for the 2F-85 finger model
            % DH = [THETA D A ALPHA SIGMA OFFSET]
            % https://robotiq.com/products/2f85-140-adaptive-robot-gripper
            link(1) = Link([0    0.06118   0.01270   pi/2   0   0]);
            link(2) = Link([0    0         0.05718   0      0   0]);
            link(3) = Link([0    0         0.04510   0      0   0]);

            % Incorporating joint limits 
            % Both finger types have same limits
            link(1).qlim = [0 0];
            link(2).qlim = [45 95]*pi/180;
            link(3).qlim = [-2 45]*pi/180;

            % Creating the serial link object
            self.model = SerialLink(link,'name',[self.name, num2str(fingerNum)]);
        end

        %% Getter for the QMatrix to Open/Close Gripper Fingers
        function qMatrix = GetOpenCloseQMatrix(self)
            % Getting the qlims of the gripper finger
            qlim = self.model.qlim;
            
            % Getting the joint angles for both open and closed states
            openQ = qlim(:,1); % Joint angles for open state
            closedQ = qlim(:,2); % Joint angles for closed state

            % Switch statement to change the qMatrix generated
            % Determined based off if gripper is open/closed
            switch(self.isClosed)
                case false % Gripper is currently opened and needs to close
                    qMatrix = jtraj(openQ, closedQ, self.movementSteps);

                case true % Gripper is currently closed and needs to open
                    qMatrix = jtraj(closedQ, openQ, self.movementSteps);
            end
        end

        %% Updater of Gripper Position
        function UpdateGripperPosition(self, baseTr)
            % Updating the base positon of the gripper finger
            self.model.base = self.model.base.T * baseTr;
            self.model.animate([0 45 45]*pi/180);
        end

    end
end
